{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Movies\\\\MovieCarausal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Slider from \"react-slick\";\nimport style from './movie.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCarousel = () => {\n  _s();\n  const [slides, setSlides] = useState([]); // State to hold movie data\n  const [loading, setLoading] = useState(true); // State for loading\n  const [error, setError] = useState(null); // State for error handling\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000\n  };\n\n  // Fetch movie data from the API\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/'); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        // Log the fetched data for debugging\n        console.log('Fetched movie data:', data);\n\n        // Assuming data is an array of movie objects\n        setSlides(data); // Set the fetched data to the state\n      } catch (error) {\n        console.error('Error fetching movie data:', error);\n        setError(error.message); // Set error message to state\n      } finally {\n        setLoading(false); // Set loading to false after fetch\n      }\n    };\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.carouselcontainer,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) // Show loading message\n      : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) // Display error message if there's an error\n      : /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings,\n        children: slides.map(slide => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.carouselslide,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.bannercontent,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: slide.imageUrl,\n              alt: slide.title,\n              className: style.bannerimage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.moviedetails,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: style.movietitle,\n                children: slide.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: style.moviesubtitle,\n                children: slide.subtitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.movielanguages,\n                children: slide.languages.join(' | ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: style.watchnowbutton,\n                children: \"WATCH NOW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, slide.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCarousel, \"PW7xxNuTL2tZ9h5olEugg3p/dGk=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useEffect","useState","Slider","style","jsxDEV","_jsxDEV","MovieCarousel","_s","slides","setSlides","loading","setLoading","error","setError","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","fetchMovies","response","fetch","ok","Error","data","json","console","log","message","className","container","children","carouselcontainer","fileName","_jsxFileName","lineNumber","columnNumber","map","slide","carouselslide","bannercontent","src","imageUrl","alt","title","bannerimage","moviedetails","movietitle","moviesubtitle","subtitle","movielanguages","languages","join","watchnowbutton","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Movies/MovieCarausal.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport style from './movie.module.css';\r\n\r\nconst MovieCarousel = () => {\r\n  const [slides, setSlides] = useState([]); // State to hold movie data\r\n  const [loading, setLoading] = useState(true); // State for loading\r\n  const [error, setError] = useState(null); // State for error handling\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n  };\r\n\r\n  // Fetch movie data from the API\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/movies/'); // Replace with your API endpoint\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        // Log the fetched data for debugging\r\n        console.log('Fetched movie data:', data);\r\n        \r\n        // Assuming data is an array of movie objects\r\n        setSlides(data); // Set the fetched data to the state\r\n      } catch (error) {\r\n        console.error('Error fetching movie data:', error);\r\n        setError(error.message); // Set error message to state\r\n      } finally {\r\n        setLoading(false); // Set loading to false after fetch\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.carouselcontainer}>\r\n        {loading ? (\r\n          <p>Loading...</p> // Show loading message\r\n        ) : error ? (\r\n          <p className={style.error}>{error}</p> // Display error message if there's an error\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {slides.map(slide => (\r\n              <div key={slide.id} className={style.carouselslide}>\r\n                <div className={style.bannercontent}>\r\n                  <img src={slide.imageUrl} alt={slide.title} className={style.bannerimage} />\r\n                  <div className={style.moviedetails}>\r\n                    <h2 className={style.movietitle}>{slide.title}</h2>\r\n                    <p className={style.moviesubtitle}>{slide.subtitle}</p>\r\n                    <div className={style.movielanguages}>\r\n                      {slide.languages.join(' | ')}\r\n                    </div>\r\n                    <button className={style.watchnowbutton}>WATCH NOW</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}