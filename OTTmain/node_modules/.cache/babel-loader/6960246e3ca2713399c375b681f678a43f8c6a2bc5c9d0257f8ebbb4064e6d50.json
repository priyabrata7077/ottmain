{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Live\\\\Chennel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Slider from 'react-slick';\nimport style from './chennel.module.css'; // Add your CSS\nimport axios from 'axios'; // Axios for API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Channel = () => {\n  _s();\n  // State to store fetched channel data\n  const [channels, setChannels] = useState([]);\n\n  // Fetch data from the API\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/live-news/').then(response => {\n      setChannels(response.data); // Assuming the API returns a list of channels\n    }).catch(error => {\n      console.error('Error fetching channels:', error);\n    });\n  }, []);\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        infinite: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.channelcarousel,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Channels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...settings,\n      children: channels.map(channel => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.channelcard,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: channel.image,\n          alt: channel.name,\n          className: style.channelimage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), channel.live && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.livebadge,\n          children: \"LIVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.channelinfo,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: channel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, channel.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Channel, \"MEXUtmfwu4/eJAvHrnimD0/z+mI=\");\n_c = Channel;\nexport default Channel;\nvar _c;\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"names":["React","useState","useEffect","Slider","style","axios","jsxDEV","_jsxDEV","Channel","_s","channels","setChannels","get","then","response","data","catch","error","console","settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","className","channelcarousel","children","fileName","_jsxFileName","lineNumber","columnNumber","map","channel","channelcard","src","image","alt","name","channelimage","live","livebadge","channelinfo","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Live/Chennel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport style from './chennel.module.css'; // Add your CSS\r\nimport axios from 'axios'; // Axios for API requests\r\n\r\nconst Channel = () => {\r\n  // State to store fetched channel data\r\n  const [channels, setChannels] = useState([]);\r\n\r\n  // Fetch data from the API\r\n  useEffect(() => {\r\n    axios.get('http://127.0.0.1:8000/api/live-news/')\r\n      .then(response => {\r\n        setChannels(response.data);  // Assuming the API returns a list of channels\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching channels:', error);\r\n      });\r\n  }, []);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className={style.channelcarousel}>\r\n      <h2>All Channels</h2>\r\n      <Slider {...settings}>\r\n        {channels.map((channel) => (\r\n          <div key={channel.id} className={style.channelcard}>\r\n            <img src={channel.image} alt={channel.name} className={style.channelimage} />\r\n            {channel.live && <span className={style.livebadge}>LIVE</span>}\r\n            <div className={style.channelinfo}>\r\n              <h3>{channel.name}</h3>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}