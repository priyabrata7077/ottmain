{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        console.log(data); // Check the API response in the console\n        setVideos(data || []); // Adjusted to directly set data\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = videoUrl => {\n    setSelectedVideo(videoUrl);\n  };\n  const closeModal = () => {\n    setSelectedVideo(null);\n  };\n\n  // Auto-scroll functionality for videos\n  useEffect(() => {\n    if (videos.length > 0) {\n      const interval = setInterval(() => {\n        setCurrentVideoIndex(prevIndex => (prevIndex + 1) % videos.length);\n      }, 3000); // Auto slide every 3 seconds\n      return () => clearInterval(interval);\n    }\n  }, [videos]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.gallerycontainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.gallerywrapper,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.gallerygrid,\n              style: {\n                transform: `translateX(-${currentVideoIndex * 100}%)`,\n                transition: 'transform 1s ease'\n              },\n              children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.galleryitem,\n                onClick: () => handleVideoClick(video.trailer_url),\n                children: [video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: video.poster_image,\n                  alt: video.title,\n                  className: style.posterImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  className: style.galleryvideo,\n                  controls: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                    src: video.movie_file,\n                    type: \"video/mp4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this), \"Your browser does not support the video tag.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.modal,\n            onClick: closeModal,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: style.close,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              className: style.modalcontent,\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: selectedVideo,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), \"Your browser does not support the video tag.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Showcase, \"3Gk0lD9ppM7kWDAOzTKWnewwwak=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","OwlCarousel","jsxDEV","_jsxDEV","Fragment","_Fragment","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","currentVideoIndex","setCurrentVideoIndex","fetchVideos","response","fetch","data","json","console","log","error","handleVideoClick","videoUrl","closeModal","length","interval","setInterval","prevIndex","clearInterval","children","className","container","gallerycontainer","gallerywrapper","gallerygrid","transform","transition","map","video","index","galleryitem","onClick","trailer_url","poster_image","src","alt","title","posterImage","fileName","_jsxFileName","lineNumber","columnNumber","galleryvideo","controls","movie_file","type","modal","close","modalcontent","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\n\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]); \r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\r\n\r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                console.log(data); // Check the API response in the console\r\n                setVideos(data || []); // Adjusted to directly set data\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n    \r\n        fetchVideos();\r\n    }, []);\r\n\r\n    const handleVideoClick = (videoUrl) => {\r\n        setSelectedVideo(videoUrl);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null);\r\n    };\r\n\r\n    // Auto-scroll functionality for videos\r\n    useEffect(() => {\r\n        if (videos.length > 0) {\r\n            const interval = setInterval(() => {\r\n                setCurrentVideoIndex((prevIndex) => (prevIndex + 1) % videos.length);\r\n            }, 3000); // Auto slide every 3 seconds\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [videos]);\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <div className={style.container}>\r\n                <div className={style.gallerycontainer}>\r\n                    <div className={style.gallerywrapper}>\r\n                        <div\r\n                            className={style.gallerygrid}\r\n                            style={{\r\n                                transform: `translateX(-${currentVideoIndex * 100}%)`,\r\n                                transition: 'transform 1s ease',\r\n                            }}\r\n                        >\r\n                            {videos.map((video, index) => (\r\n                                <div key={index} className={style.galleryitem} onClick={() => handleVideoClick(video.trailer_url)}>\r\n                                    {/* Render the poster image */}\r\n                                    {video.poster_image && (\r\n                                        <img \r\n                                            src={video.poster_image} \r\n                                            alt={video.title} \r\n                                            className={style.posterImage} \r\n                                        />\r\n                                    )}\r\n                                    <video className={style.galleryvideo} controls>\r\n                                        <source src={video.movie_file} type=\"video/mp4\" />\r\n                                        Your browser does not support the video tag.\r\n                                    </video>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {selectedVideo && (\r\n                        <div className={style.modal} onClick={closeModal}>\r\n                            <span className={style.close}>&times;</span>\r\n                            <video className={style.modalcontent} controls>\r\n                                <source src={selectedVideo} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAO,2CAA2C;AAClD,OAAO,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGxD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;QACnBR,SAAS,CAACQ,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAEDP,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAIC,QAAQ,IAAK;IACnCZ,gBAAgB,CAACY,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBb,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACZ,IAAIS,MAAM,CAACiB,MAAM,GAAG,CAAC,EAAE;MACnB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/Bd,oBAAoB,CAAEe,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIpB,MAAM,CAACiB,MAAM,CAAC;MACxE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACV,OAAO,MAAMI,aAAa,CAACH,QAAQ,CAAC;IACxC;EACJ,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;EAEZ,oBACIL,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACA3B,OAAA;MAAA2B,QAAA,eACI3B,OAAA;QAAK4B,SAAS,EAAE/B,KAAK,CAACgC,SAAU;QAAAF,QAAA,eAC5B3B,OAAA;UAAK4B,SAAS,EAAE/B,KAAK,CAACiC,gBAAiB;UAAAH,QAAA,gBACnC3B,OAAA;YAAK4B,SAAS,EAAE/B,KAAK,CAACkC,cAAe;YAAAJ,QAAA,eACjC3B,OAAA;cACI4B,SAAS,EAAE/B,KAAK,CAACmC,WAAY;cAC7BnC,KAAK,EAAE;gBACHoC,SAAS,EAAE,eAAexB,iBAAiB,GAAG,GAAG,IAAI;gBACrDyB,UAAU,EAAE;cAChB,CAAE;cAAAP,QAAA,EAEDtB,MAAM,CAAC8B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBrC,OAAA;gBAAiB4B,SAAS,EAAE/B,KAAK,CAACyC,WAAY;gBAACC,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACiB,KAAK,CAACI,WAAW,CAAE;gBAAAb,QAAA,GAE7FS,KAAK,CAACK,YAAY,iBACfzC,OAAA;kBACI0C,GAAG,EAAEN,KAAK,CAACK,YAAa;kBACxBE,GAAG,EAAEP,KAAK,CAACQ,KAAM;kBACjBhB,SAAS,EAAE/B,KAAK,CAACgD;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC,CACJ,eACDjD,OAAA;kBAAO4B,SAAS,EAAE/B,KAAK,CAACqD,YAAa;kBAACC,QAAQ;kBAAAxB,QAAA,gBAC1C3B,OAAA;oBAAQ0C,GAAG,EAAEN,KAAK,CAACgB,UAAW;oBAACC,IAAI,EAAC;kBAAW;oBAAAP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,gDAEtD;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAZFZ,KAAK;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAaV,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EAEL1C,aAAa,iBACVP,OAAA;YAAK4B,SAAS,EAAE/B,KAAK,CAACyD,KAAM;YAACf,OAAO,EAAElB,UAAW;YAAAM,QAAA,gBAC7C3B,OAAA;cAAM4B,SAAS,EAAE/B,KAAK,CAAC0D,KAAM;cAAA5B,QAAA,EAAC;YAAO;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5CjD,OAAA;cAAO4B,SAAS,EAAE/B,KAAK,CAAC2D,YAAa;cAACL,QAAQ;cAAAxB,QAAA,gBAC1C3B,OAAA;gBAAQ0C,GAAG,EAAEnC,aAAc;gBAAC8C,IAAI,EAAC;cAAW;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gDAEnD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACJ,CAAC;AAEX,CAAC;AAAC7C,EAAA,CArFID,QAAQ;AAAAsD,EAAA,GAARtD,QAAQ;AAuFd,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}