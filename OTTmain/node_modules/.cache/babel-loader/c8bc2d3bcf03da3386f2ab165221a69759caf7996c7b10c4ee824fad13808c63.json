{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        setVideos(data || []); // Set fetched videos\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = videoUrl => {\n    setSelectedVideo(videoUrl); // Open video in modal on click\n  };\n  const closeModal = () => {\n    setSelectedVideo(null); // Close the modal\n  };\n\n  // Auto-scroll functionality for videos (removed for simplicity)\n  useEffect(() => {\n    if (videos.length > 0) {\n      const interval = setInterval(() => {\n        setCurrentVideoIndex(prevIndex => (prevIndex + 1) % videos.length);\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [videos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: style.title,\n      children: \"Movie Showcase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.gallerycontainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.gallerygrid,\n        children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.galleryitem,\n          children: video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.poster_image,\n            alt: video.title,\n            className: style.posterImage,\n            onClick: () => handleVideoClick(video.movie_file) // Open video on click\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.modal,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.modalcontent,\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.close,\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          className: style.videoPlayer,\n          controls: true,\n          autoPlay: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: selectedVideo,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"3Gk0lD9ppM7kWDAOzTKWnewwwak=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","jsxDEV","_jsxDEV","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","currentVideoIndex","setCurrentVideoIndex","fetchVideos","response","fetch","data","json","error","console","handleVideoClick","videoUrl","closeModal","length","interval","setInterval","prevIndex","clearInterval","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","gallerycontainer","gallerygrid","map","video","index","galleryitem","poster_image","src","alt","posterImage","onClick","movie_file","modal","modalcontent","e","stopPropagation","close","videoPlayer","controls","autoPlay","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]); \r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\r\n\r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                setVideos(data || []); // Set fetched videos\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n        fetchVideos();\r\n    }, []);\r\n\r\n    const handleVideoClick = (videoUrl) => {\r\n        setSelectedVideo(videoUrl); // Open video in modal on click\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null); // Close the modal\r\n    };\r\n\r\n    // Auto-scroll functionality for videos (removed for simplicity)\r\n    useEffect(() => {\r\n        if (videos.length > 0) {\r\n            const interval = setInterval(() => {\r\n                setCurrentVideoIndex((prevIndex) => (prevIndex + 1) % videos.length);\r\n            }, 3000); \r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [videos]);\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <h2 className={style.title}>Movie Showcase</h2>\r\n            <div className={style.gallerycontainer}>\r\n                <div className={style.gallerygrid}>\r\n                    {videos.map((video, index) => (\r\n                        <div key={index} className={style.galleryitem}>\r\n                            {/* Render the poster image */}\r\n                            {video.poster_image && (\r\n                                <img \r\n                                    src={video.poster_image} \r\n                                    alt={video.title} \r\n                                    className={style.posterImage} \r\n                                    onClick={() => handleVideoClick(video.movie_file)} // Open video on click\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal for video playback */}\r\n            {selectedVideo && (\r\n                <div className={style.modal} onClick={closeModal}>\r\n                    <div className={style.modalcontent} onClick={(e) => e.stopPropagation()}>\r\n                        <span className={style.close} onClick={closeModal}>&times;</span>\r\n                        <video className={style.videoPlayer} controls autoPlay>\r\n                            <source src={selectedVideo} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,SAAS,CAACQ,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IACDL,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,gBAAgB,GAAIC,QAAQ,IAAK;IACnCX,gBAAgB,CAACW,QAAQ,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBZ,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACZ,IAAIM,MAAM,CAACgB,MAAM,GAAG,CAAC,EAAE;MACnB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/Bb,oBAAoB,CAAEc,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAInB,MAAM,CAACgB,MAAM,CAAC;MACxE,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMI,aAAa,CAACH,QAAQ,CAAC;IACxC;EACJ,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,oBACIH,OAAA;IAAKwB,SAAS,EAAE1B,KAAK,CAAC2B,SAAU;IAAAC,QAAA,gBAC5B1B,OAAA;MAAIwB,SAAS,EAAE1B,KAAK,CAAC6B,KAAM;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/C/B,OAAA;MAAKwB,SAAS,EAAE1B,KAAK,CAACkC,gBAAiB;MAAAN,QAAA,eACnC1B,OAAA;QAAKwB,SAAS,EAAE1B,KAAK,CAACmC,WAAY;QAAAP,QAAA,EAC7BvB,MAAM,CAAC+B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBpC,OAAA;UAAiBwB,SAAS,EAAE1B,KAAK,CAACuC,WAAY;UAAAX,QAAA,EAEzCS,KAAK,CAACG,YAAY,iBACftC,OAAA;YACIuC,GAAG,EAAEJ,KAAK,CAACG,YAAa;YACxBE,GAAG,EAAEL,KAAK,CAACR,KAAM;YACjBH,SAAS,EAAE1B,KAAK,CAAC2C,WAAY;YAC7BC,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACmB,KAAK,CAACQ,UAAU,CAAE,CAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD;QACJ,GATKK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGL1B,aAAa,iBACVL,OAAA;MAAKwB,SAAS,EAAE1B,KAAK,CAAC8C,KAAM;MAACF,OAAO,EAAExB,UAAW;MAAAQ,QAAA,eAC7C1B,OAAA;QAAKwB,SAAS,EAAE1B,KAAK,CAAC+C,YAAa;QAACH,OAAO,EAAGI,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;QAAArB,QAAA,gBACpE1B,OAAA;UAAMwB,SAAS,EAAE1B,KAAK,CAACkD,KAAM;UAACN,OAAO,EAAExB,UAAW;UAAAQ,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjE/B,OAAA;UAAOwB,SAAS,EAAE1B,KAAK,CAACmD,WAAY;UAACC,QAAQ;UAACC,QAAQ;UAAAzB,QAAA,gBAClD1B,OAAA;YAAQuC,GAAG,EAAElC,aAAc;YAAC+C,IAAI,EAAC;UAAW;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gDAEnD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAxEID,QAAQ;AAAAoD,EAAA,GAARpD,QAAQ;AA0Ed,eAAeA,QAAQ;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}