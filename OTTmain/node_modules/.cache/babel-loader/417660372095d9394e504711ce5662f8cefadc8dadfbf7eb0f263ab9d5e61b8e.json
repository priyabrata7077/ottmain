{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport style from './festival.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FestivalShowcase = () => {\n  _s();\n  const [celebrityEvents, setCelebrityEvents] = useState([]);\n  const [isPlayerOpen, setIsPlayerOpen] = useState(false); // State to control player visibility\n  const [selectedMovie, setSelectedMovie] = useState(null); // State to store selected movie details\n\n  // Fetching data from the API\n  useEffect(() => {\n    const fetchCelebrityEvents = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/?language=Gujrati'); // Update this with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setCelebrityEvents(data);\n      } catch (error) {\n        console.error('Error fetching celebrity events:', error);\n      }\n    };\n    fetchCelebrityEvents();\n  }, []);\n\n  // Open the video player modal\n  const openPlayer = movie => {\n    setSelectedMovie(movie);\n    setIsPlayerOpen(true);\n  };\n\n  // Close the video player modal\n  const closePlayer = () => {\n    setIsPlayerOpen(false);\n    setSelectedMovie(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.festivalshowcasecontainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Showcase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.celebritygrid,\n      children: celebrityEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.celebrityitem,\n        onClick: () => openPlayer(event) // Open player on click\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: event.poster_image,\n          alt: event.title,\n          style: {\n            height: '330px',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isPlayerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.playerOverlay,\n      onClick: closePlayer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.playerContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePlayer,\n          className: style.closeButton,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          className: style.videoPlayer,\n          autoPlay: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: selectedMovie.movie_file,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), \" \", \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(FestivalShowcase, \"NDDpQwCYC8OhVXxG+X3BFkB40nU=\");\n_c = FestivalShowcase;\nexport default FestivalShowcase;\nvar _c;\n$RefreshReg$(_c, \"FestivalShowcase\");","map":{"version":3,"names":["React","useEffect","useState","style","jsxDEV","_jsxDEV","FestivalShowcase","_s","celebrityEvents","setCelebrityEvents","isPlayerOpen","setIsPlayerOpen","selectedMovie","setSelectedMovie","fetchCelebrityEvents","response","fetch","ok","Error","data","json","error","console","openPlayer","movie","closePlayer","className","festivalshowcasecontainer","children","fileName","_jsxFileName","lineNumber","columnNumber","celebritygrid","map","event","index","celebrityitem","onClick","src","poster_image","alt","title","height","width","playerOverlay","playerContainer","closeButton","controls","videoPlayer","autoPlay","movie_file","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport style from './festival.module.css';\r\n\r\nconst FestivalShowcase = () => {\r\n  const [celebrityEvents, setCelebrityEvents] = useState([]);\r\n  const [isPlayerOpen, setIsPlayerOpen] = useState(false); // State to control player visibility\r\n  const [selectedMovie, setSelectedMovie] = useState(null); // State to store selected movie details\r\n\r\n  // Fetching data from the API\r\n  useEffect(() => {\r\n    const fetchCelebrityEvents = async () => {  \r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/movies/?language=Gujrati');  // Update this with your actual API endpoint\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setCelebrityEvents(data);\r\n      } catch (error) {\r\n        console.error('Error fetching celebrity events:', error);\r\n      }\r\n    };\r\n\r\n    fetchCelebrityEvents();\r\n  }, []);\r\n\r\n  // Open the video player modal\r\n  const openPlayer = (movie) => {\r\n    setSelectedMovie(movie);\r\n    setIsPlayerOpen(true);\r\n  };\r\n\r\n  // Close the video player modal\r\n  const closePlayer = () => {\r\n    setIsPlayerOpen(false);\r\n    setSelectedMovie(null);\r\n  };\r\n\r\n  return (\r\n    <div className={style.festivalshowcasecontainer}>\r\n      <h2>Movie Showcase</h2>\r\n      <div className={style.celebritygrid}>\r\n        {celebrityEvents.map((event, index) => (\r\n          <div\r\n            className={style.celebrityitem}\r\n            key={index}\r\n            onClick={() => openPlayer(event)} // Open player on click\r\n          >\r\n            <img src={event.poster_image} alt={event.title} style={{ height: '330px', width: '100%' }} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Modal for video player */}\r\n      {isPlayerOpen && (\r\n        <div className={style.playerOverlay} onClick={closePlayer}>\r\n          <div className={style.playerContainer}>\r\n            <button onClick={closePlayer} className={style.closeButton}>X</button>\r\n            {selectedMovie && (\r\n              <video controls className={style.videoPlayer} autoPlay>\r\n                <source src={selectedMovie.movie_file} type=\"video/mp4\" /> {/* Use movie file instead of trailer */}\r\n                Your browser does not support the video tag.\r\n              </video>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FestivalShowcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}