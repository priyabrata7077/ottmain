{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\AddBanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './addBanner.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdBanner = () => {\n  _s();\n  const [showAd, setShowAd] = useState(true);\n  const [showOptions, setShowOptions] = useState(false);\n  const [adData, setAdData] = useState(null); // State to hold fetched ad data\n\n  useEffect(() => {\n    // Fetch ads from the API\n    const fetchAds = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/ads/'); // Replace with your API URL\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        // Assuming you want to display the first ad fetched\n        setAdData(data[0]);\n      } catch (error) {\n        console.error('Error fetching ads:', error);\n      }\n    };\n    fetchAds();\n  }, []);\n  const closeAd = () => {\n    setShowOptions(true);\n  };\n  const handleOptionClick = option => {\n    if (option === \"not-interested\") {\n      setShowAd(false);\n    } else {\n      setShowOptions(false); // Keep the ad visible\n    }\n  };\n  return showAd && adData &&\n  /*#__PURE__*/\n  // Only render if adData is available\n  _jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.adbanner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.adcontent,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: adData.image_url // Use fetched ad image URL\n          ,\n          alt: \"Ad Logo\",\n          className: style.adlogo,\n          style: {\n            width: '100%',\n            height: 'auto'\n          } // Adjust styling as needed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.adtext,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.adtitle,\n            children: adData.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: adData.movie_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Watch Now on IMDb, Rating: \", adData.rating_text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: adData.link // Use fetched ad link\n          ,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: style.adbtn,\n          children: \"Watch Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), !showOptions ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.adclosebtn,\n        onClick: closeAd,\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.optionMenu,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleOptionClick(\"not-interested\"),\n          children: \"Not Interested\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleOptionClick(\"keep-suggesting\"),\n          children: \"Keep Suggesting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_s(AdBanner, \"lf422QHQ+WXj4Nt5haGQVuAjv3U=\");\n_c = AdBanner;\nexport default AdBanner;\nvar _c;\n$RefreshReg$(_c, \"AdBanner\");","map":{"version":3,"names":["React","useState","useEffect","style","jsxDEV","_jsxDEV","AdBanner","_s","showAd","setShowAd","showOptions","setShowOptions","adData","setAdData","fetchAds","response","fetch","ok","Error","data","json","error","console","closeAd","handleOptionClick","option","className","container","children","adbanner","adcontent","src","image_url","alt","adlogo","width","height","fileName","_jsxFileName","lineNumber","columnNumber","adtext","adtitle","title","movie_title","rating_text","href","link","target","rel","adbtn","adclosebtn","onClick","optionMenu","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/AddBanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './addBanner.module.css';\r\n\r\nconst AdBanner = () => {\r\n  const [showAd, setShowAd] = useState(true);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [adData, setAdData] = useState(null); // State to hold fetched ad data\r\n\r\n  useEffect(() => {\r\n    // Fetch ads from the API\r\n    const fetchAds = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/ads/'); // Replace with your API URL\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        // Assuming you want to display the first ad fetched\r\n        setAdData(data[0]);\r\n      } catch (error) {\r\n        console.error('Error fetching ads:', error);\r\n      }\r\n    };\r\n\r\n    fetchAds();\r\n  }, []);\r\n\r\n  const closeAd = () => {\r\n    setShowOptions(true);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    if (option === \"not-interested\") {\r\n      setShowAd(false);\r\n    } else {\r\n      setShowOptions(false); // Keep the ad visible\r\n    }\r\n  };\r\n\r\n  return (\r\n    showAd && adData && ( // Only render if adData is available\r\n      <div className={style.container}>\r\n        <div className={style.adbanner}>\r\n          <div className={style.adcontent}>\r\n            <img\r\n              src={adData.image_url} // Use fetched ad image URL\r\n              alt=\"Ad Logo\"\r\n              className={style.adlogo}\r\n              style={{ width: '100%', height: 'auto' }} // Adjust styling as needed\r\n            />\r\n            <div className={style.adtext}>\r\n              <p className={style.adtitle}>{adData.title}</p>\r\n              <h1>{adData.movie_title}</h1>\r\n              <p>Watch Now on IMDb, Rating: {adData.rating_text}</p>\r\n            </div>\r\n            <a\r\n              href={adData.link} // Use fetched ad link\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className={style.adbtn}\r\n            >\r\n              Watch Now\r\n            </a>\r\n          </div>\r\n\r\n          {!showOptions ? (\r\n            <button className={style.adclosebtn} onClick={closeAd}>\r\n              âœ–\r\n            </button>\r\n          ) : (\r\n            <div className={style.optionMenu}>\r\n              <p onClick={() => handleOptionClick(\"not-interested\")}>Not Interested</p>\r\n              <p onClick={() => handleOptionClick(\"keep-suggesting\")}>Keep Suggesting</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default AdBanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}