{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        console.log(data); // Check the API response in the console\n        setVideos(data || []); // Adjusted to directly set data\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = videoUrl => {\n    setSelectedVideo(videoUrl);\n  };\n  const closeModal = () => {\n    setSelectedVideo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.container,\n        children: [/*#__PURE__*/_jsxDEV(OwlCarousel, {\n          className: \"owl-theme\",\n          loop: true,\n          margin: 10,\n          nav: true,\n          items: 3 // Display 3 items per slide\n          ,\n          autoplay: true // Enable autoplay\n          ,\n          autoplayTimeout: 3000 // Set autoplay timeout\n          ,\n          children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${style.galleryitem} ${index === 1 ? style.middleItem : ''}` // Apply middle hover effect\n            ,\n            onClick: () => handleVideoClick(video.trailer_url),\n            children: [video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.poster_image,\n              alt: video.title,\n              className: style.posterImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              className: style.galleryvideo,\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: video.movie_file,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), \"Your browser does not support the video tag.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.modal,\n          onClick: closeModal,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.close,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            className: style.modalcontent,\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: selectedVideo,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Showcase, \"pgreQswQcvHuEDpit6fh/6bGaAw=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","OwlCarousel","jsxDEV","_jsxDEV","Fragment","_Fragment","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","fetchVideos","response","fetch","data","json","console","log","error","handleVideoClick","videoUrl","closeModal","children","className","container","loop","margin","nav","items","autoplay","autoplayTimeout","map","video","index","galleryitem","middleItem","onClick","trailer_url","poster_image","src","alt","title","posterImage","fileName","_jsxFileName","lineNumber","columnNumber","galleryvideo","controls","movie_file","type","modal","close","modalcontent","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]);\r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    \r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                console.log(data); // Check the API response in the console\r\n                setVideos(data || []); // Adjusted to directly set data\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n    \r\n        fetchVideos();\r\n    }, []);\r\n\r\n    const handleVideoClick = (videoUrl) => {\r\n        setSelectedVideo(videoUrl);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <div className={style.container}>\r\n                <OwlCarousel\r\n                    className=\"owl-theme\"\r\n                    loop\r\n                    margin={10}\r\n                    nav\r\n                    items={3} // Display 3 items per slide\r\n                    autoplay={true} // Enable autoplay\r\n                    autoplayTimeout={3000} // Set autoplay timeout\r\n                >\r\n                    {videos.map((video, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`${style.galleryitem} ${index === 1 ? style.middleItem : ''}`} // Apply middle hover effect\r\n                            onClick={() => handleVideoClick(video.trailer_url)}\r\n                        >\r\n                            {/* Render the poster image */}\r\n                            {video.poster_image && (\r\n                                <img \r\n                                    src={video.poster_image} \r\n                                    alt={video.title} \r\n                                    className={style.posterImage} \r\n                                />\r\n                            )}\r\n                            <video className={style.galleryvideo} controls>\r\n                                <source src={video.movie_file} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        </div>\r\n                    ))}\r\n                </OwlCarousel>\r\n\r\n                {selectedVideo && (\r\n                    <div className={style.modal} onClick={closeModal}>\r\n                        <span className={style.close}>&times;</span>\r\n                        <video className={style.modalcontent} controls>\r\n                            <source src={selectedVideo} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}