{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        console.log(data); // Log the response\n        setVideos(data || []);\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = videoUrl => {\n    setSelectedVideo(videoUrl);\n  };\n  const closeModal = () => {\n    setSelectedVideo(null);\n  };\n\n  // Infinite scroll effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentVideoIndex(prevIndex => (prevIndex + 1) % Math.ceil(videos.length / 3));\n    }, 3000); // Change slide every 3 seconds\n    return () => clearInterval(interval);\n  }, [videos]);\n\n  // Function to get the current set of videos to display\n  const getCurrentVideos = () => {\n    if (videos.length === 0) return [];\n    const startIndex = currentVideoIndex * 3;\n    return videos.slice(startIndex, startIndex + 3).concat(videos.slice(0, Math.max(0, startIndex + 3 - videos.length)));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.gallerycontainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.gallerygrid,\n          children: getCurrentVideos().map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.galleryitem,\n            onClick: () => handleVideoClick(video.trailer_url),\n            children: [video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.poster_image,\n              alt: video.title,\n              className: style.posterImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              className: style.galleryvideo,\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: video.movie_file,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), \"Your browser does not support the video tag.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.modal,\n        onClick: closeModal,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.close,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          className: style.modalcontent,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: selectedVideo,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Showcase, \"3Gk0lD9ppM7kWDAOzTKWnewwwak=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","jsxDEV","_jsxDEV","Fragment","_Fragment","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","currentVideoIndex","setCurrentVideoIndex","fetchVideos","response","fetch","data","json","console","log","error","handleVideoClick","videoUrl","closeModal","interval","setInterval","prevIndex","Math","ceil","length","clearInterval","getCurrentVideos","startIndex","slice","concat","max","children","className","container","gallerycontainer","gallerygrid","map","video","index","galleryitem","onClick","trailer_url","poster_image","src","alt","title","posterImage","fileName","_jsxFileName","lineNumber","columnNumber","galleryvideo","controls","movie_file","type","modal","close","modalcontent","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]);\r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\r\n\r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                console.log(data); // Log the response\r\n                setVideos(data || []);\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n    \r\n        fetchVideos();\r\n    }, []);\r\n    \r\n\r\n    const handleVideoClick = (videoUrl) => {\r\n        setSelectedVideo(videoUrl);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null);\r\n    };\r\n\r\n    // Infinite scroll effect\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentVideoIndex((prevIndex) => (prevIndex + 1) % Math.ceil(videos.length / 3));\r\n        }, 3000); // Change slide every 3 seconds\r\n        return () => clearInterval(interval);\r\n    }, [videos]);\r\n\r\n    // Function to get the current set of videos to display\r\n    const getCurrentVideos = () => {\r\n        if (videos.length === 0) return [];\r\n        const startIndex = currentVideoIndex * 3;\r\n        return videos.slice(startIndex, startIndex + 3).concat(videos.slice(0, Math.max(0, startIndex + 3 - videos.length)));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={style.container}>\r\n                <div className={style.gallerycontainer}>\r\n                    <div className={style.gallerygrid}>\r\n                        {getCurrentVideos().map((video, index) => (\r\n                            <div key={index} className={style.galleryitem} onClick={() => handleVideoClick(video.trailer_url)}>\r\n                                {video.poster_image && (\r\n                                    <img \r\n                                        src={video.poster_image} \r\n                                        alt={video.title} \r\n                                        className={style.posterImage} \r\n                                    />\r\n                                )}\r\n                                <video className={style.galleryvideo} controls>\r\n                                    <source src={video.movie_file} type=\"video/mp4\" />\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedVideo && (\r\n                    <div className={style.modal} onClick={closeModal}>\r\n                        <span className={style.close}>&times;</span>\r\n                        <video className={style.modalcontent} controls>\r\n                            <source src={selectedVideo} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}