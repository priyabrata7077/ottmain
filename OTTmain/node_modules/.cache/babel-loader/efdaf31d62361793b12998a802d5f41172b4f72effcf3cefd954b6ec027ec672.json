{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\play.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport { useLocation } from 'react-router-dom'; // For routing (if needed)\nimport style from './videoPlayer.module.css'; // Your custom CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  // Getting the video URL from the query params (example: ?video=https://example.com/video.mp4)\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const videoUrl = params.get('video') || 'https://www.example.com/default-video.mp4'; // Default URL if none provided\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.videoPlayerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.playerWrapper,\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: videoUrl // URL of the video to play\n        ,\n        className: style.reactPlayer,\n        playing: true // Auto play\n        ,\n        controls: true // Show controls (play, pause, etc.)\n        ,\n        width: \"100%\" // Full width\n        ,\n        height: \"100%\" // Full height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","ReactPlayer","useLocation","style","jsxDEV","_jsxDEV","VideoPlayer","_s","location","params","URLSearchParams","search","videoUrl","get","className","videoPlayerContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","playerWrapper","url","reactPlayer","playing","controls","width","height","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/play.jsx"],"sourcesContent":["import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { useLocation } from 'react-router-dom'; // For routing (if needed)\r\nimport style from './videoPlayer.module.css'; // Your custom CSS for styling\r\n\r\nconst VideoPlayer = () => {\r\n  // Getting the video URL from the query params (example: ?video=https://example.com/video.mp4)\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const videoUrl = params.get('video') || 'https://www.example.com/default-video.mp4'; // Default URL if none provided\r\n\r\n  return (\r\n    <div className={style.videoPlayerContainer}>\r\n      <h2>Now Playing</h2>\r\n      <div className={style.playerWrapper}>\r\n        <ReactPlayer\r\n          url={videoUrl} // URL of the video to play\r\n          className={style.reactPlayer}\r\n          playing={true} // Auto play\r\n          controls={true} // Show controls (play, pause, etc.)\r\n          width=\"100%\" // Full width\r\n          height=\"100%\" // Full height\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AACtC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,KAAK,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAG,CAAC,OAAO,CAAC,IAAI,2CAA2C,CAAC,CAAC;;EAErF,oBACER,OAAA;IAAKS,SAAS,EAAEX,KAAK,CAACY,oBAAqB;IAAAC,QAAA,gBACzCX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBf,OAAA;MAAKS,SAAS,EAAEX,KAAK,CAACkB,aAAc;MAAAL,QAAA,eAClCX,OAAA,CAACJ,WAAW;QACVqB,GAAG,EAAEV,QAAS,CAAC;QAAA;QACfE,SAAS,EAAEX,KAAK,CAACoB,WAAY;QAC7BC,OAAO,EAAE,IAAK,CAAC;QAAA;QACfC,QAAQ,EAAE,IAAK,CAAC;QAAA;QAChBC,KAAK,EAAC,MAAM,CAAC;QAAA;QACbC,MAAM,EAAC,MAAM,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CArBID,WAAW;EAAA,QAEEJ,WAAW;AAAA;AAAA0B,EAAA,GAFxBtB,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}