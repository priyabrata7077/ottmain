{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\FestivalShowcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport style from './festival.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FestivalShowcase = () => {\n  _s();\n  const [celebrityEvents, setCelebrityEvents] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null); // State to store selected movie details\n  const [isPlayerOpen, setIsPlayerOpen] = useState(false); // State to control player visibility\n  const [currentIndex, setCurrentIndex] = useState(0); // State for auto-scroll\n\n  // Fetching data from the API\n  useEffect(() => {\n    const fetchCelebrityEvents = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/reerr/');\n        const data = await response.json();\n        setCelebrityEvents(data || []);\n      } catch (error) {\n        console.error('Error fetching celebrity events:', error);\n      }\n    };\n    fetchCelebrityEvents();\n  }, []);\n\n  // Auto-scroll functionality for gallery\n  useEffect(() => {\n    if (celebrityEvents.length > 0) {\n      const interval = setInterval(() => {\n        setCurrentIndex(prevIndex => (prevIndex + 1) % celebrityEvents.length);\n      }, 5000); // Auto-scroll every 5 seconds\n      return () => clearInterval(interval);\n    }\n  }, [celebrityEvents]);\n\n  // Open the video player modal\n  const openPlayer = movie => {\n    setSelectedMovie(movie);\n    setIsPlayerOpen(true);\n  };\n\n  // Close the video player modal\n  const closePlayer = () => {\n    setIsPlayerOpen(false);\n    setSelectedMovie(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.festivalshowcasecontainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Celebrities at Lalbaugcha Raja\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.gallerycontainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.gallerywrapper,\n        style: {\n          transform: `translateX(-${currentIndex * 210}px)`,\n          // Adjusting width for scrolling\n          transition: 'transform 0.8s ease'\n        },\n        children: celebrityEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.galleryitem,\n          onClick: () => openPlayer(event) // Open player on click\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.poster_image,\n            alt: `${event.day} ${event.title}`,\n            className: style.posterImage,\n            style: {\n              height: '150px',\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.celebrityinfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: event.day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [event.title, \" \", event.year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isPlayerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.playerOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.playerContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePlayer,\n          className: style.closeButton,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: selectedMovie.trailer_url,\n          title: selectedMovie.title,\n          width: \"100%\",\n          height: \"400px\",\n          frameBorder: \"0\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(FestivalShowcase, \"VYDt5V2T/HCMyF2yPqEIuXBM/O8=\");\n_c = FestivalShowcase;\nexport default FestivalShowcase;\nvar _c;\n$RefreshReg$(_c, \"FestivalShowcase\");","map":{"version":3,"names":["React","useEffect","useState","style","jsxDEV","_jsxDEV","FestivalShowcase","_s","celebrityEvents","setCelebrityEvents","selectedMovie","setSelectedMovie","isPlayerOpen","setIsPlayerOpen","currentIndex","setCurrentIndex","fetchCelebrityEvents","response","fetch","data","json","error","console","length","interval","setInterval","prevIndex","clearInterval","openPlayer","movie","closePlayer","className","festivalshowcasecontainer","children","fileName","_jsxFileName","lineNumber","columnNumber","gallerycontainer","gallerywrapper","transform","transition","map","event","index","galleryitem","onClick","src","poster_image","alt","day","title","posterImage","height","width","celebrityinfo","year","playerOverlay","playerContainer","closeButton","trailer_url","frameBorder","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/FestivalShowcase.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport style from './festival.module.css';\r\n\r\nconst FestivalShowcase = () => {\r\n  const [celebrityEvents, setCelebrityEvents] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null); // State to store selected movie details\r\n  const [isPlayerOpen, setIsPlayerOpen] = useState(false); // State to control player visibility\r\n  const [currentIndex, setCurrentIndex] = useState(0); // State for auto-scroll\r\n\r\n  // Fetching data from the API\r\n  useEffect(() => {\r\n    const fetchCelebrityEvents = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/movies/reerr/');\r\n        const data = await response.json();\r\n        setCelebrityEvents(data || []);\r\n      } catch (error) {\r\n        console.error('Error fetching celebrity events:', error);\r\n      }\r\n    };\r\n\r\n    fetchCelebrityEvents();\r\n  }, []);\r\n\r\n  // Auto-scroll functionality for gallery\r\n  useEffect(() => {\r\n    if (celebrityEvents.length > 0) {\r\n      const interval = setInterval(() => {\r\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % celebrityEvents.length);\r\n      }, 5000); // Auto-scroll every 5 seconds\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [celebrityEvents]);\r\n\r\n  // Open the video player modal\r\n  const openPlayer = (movie) => {\r\n    setSelectedMovie(movie);\r\n    setIsPlayerOpen(true);\r\n  };\r\n\r\n  // Close the video player modal\r\n  const closePlayer = () => {\r\n    setIsPlayerOpen(false);\r\n    setSelectedMovie(null);\r\n  };\r\n\r\n  return (\r\n    <div className={style.festivalshowcasecontainer}>\r\n      <h2>Celebrities at Lalbaugcha Raja</h2>\r\n      <div className={style.gallerycontainer}>\r\n        <div\r\n          className={style.gallerywrapper}\r\n          style={{\r\n            transform: `translateX(-${currentIndex * 210}px)`, // Adjusting width for scrolling\r\n            transition: 'transform 0.8s ease',\r\n          }}\r\n        >\r\n          {celebrityEvents.map((event, index) => (\r\n            <div\r\n              className={style.galleryitem}\r\n              key={index}\r\n              onClick={() => openPlayer(event)} // Open player on click\r\n            >\r\n              <img\r\n                src={event.poster_image}\r\n                alt={`${event.day} ${event.title}`}\r\n                className={style.posterImage}\r\n                style={{ height: '150px', width: '100%' }}\r\n              />\r\n              <div className={style.celebrityinfo}>\r\n                <h4>{event.day}</h4>\r\n                <p>{event.title} {event.year}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for video player */}\r\n      {isPlayerOpen && (\r\n        <div className={style.playerOverlay}>\r\n          <div className={style.playerContainer}>\r\n            <button onClick={closePlayer} className={style.closeButton}>X</button>\r\n            {selectedMovie && (\r\n              <iframe\r\n                src={selectedMovie.trailer_url}\r\n                title={selectedMovie.title}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                frameBorder=\"0\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FestivalShowcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}