{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        console.log(data); // Check the API response in the console\n        setVideos(data || []); // Adjusted to directly set data\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = videoUrl => {\n    setSelectedVideo(videoUrl);\n  };\n  const closeModal = () => {\n    setSelectedVideo(null);\n  };\n\n  // Auto-scroll functionality for videos\n  useEffect(() => {\n    if (videos.length > 0) {\n      const interval = setInterval(() => {\n        setCurrentVideoIndex(prevIndex => {\n          // Calculate new index for 3 items per scroll\n          return (prevIndex + 1) % Math.ceil(videos.length / 3);\n        });\n      }, 3000); // Auto slide every 3 seconds\n      return () => clearInterval(interval);\n    }\n  }, [videos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.gallerycontainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.gallerywrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.gallerygrid,\n            style: {\n              transform: `translateX(-${currentVideoIndex * 100}%)`,\n              transition: 'transform 1s ease'\n            },\n            children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.galleryitem,\n              onClick: () => handleVideoClick(video.trailer_url),\n              children: [video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.poster_image,\n                alt: video.title,\n                className: style.poster_image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                className: style.galleryvideo,\n                controls: true,\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: video.movie_file,\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), \"Your browser does not support the video tag.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.modal,\n          onClick: closeModal,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.close,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            className: style.modalcontent,\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: selectedVideo,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"3Gk0lD9ppM7kWDAOzTKWnewwwak=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","jsxDEV","_jsxDEV","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","currentVideoIndex","setCurrentVideoIndex","fetchVideos","response","fetch","data","json","console","log","error","handleVideoClick","videoUrl","closeModal","length","interval","setInterval","prevIndex","Math","ceil","clearInterval","children","className","container","gallerycontainer","gallerywrapper","gallerygrid","transform","transition","map","video","index","galleryitem","onClick","trailer_url","poster_image","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","galleryvideo","controls","movie_file","type","modal","close","modalcontent","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]); \r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\r\n\r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                console.log(data); // Check the API response in the console\r\n                setVideos(data || []); // Adjusted to directly set data\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n    \r\n        fetchVideos();\r\n    }, []);\r\n\r\n    const handleVideoClick = (videoUrl) => {\r\n        setSelectedVideo(videoUrl);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null);\r\n    };\r\n\r\n    // Auto-scroll functionality for videos\r\n    useEffect(() => {\r\n        if (videos.length > 0) {\r\n            const interval = setInterval(() => {\r\n                setCurrentVideoIndex((prevIndex) => {\r\n                    // Calculate new index for 3 items per scroll\r\n                    return (prevIndex + 1) % Math.ceil(videos.length / 3);\r\n                });\r\n            }, 3000); // Auto slide every 3 seconds\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [videos]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.container}>\r\n                <div className={style.gallerycontainer}>\r\n                    <div className={style.gallerywrapper}>\r\n                        <div\r\n                            className={style.gallerygrid}\r\n                            style={{\r\n                                transform: `translateX(-${currentVideoIndex * 100}%)`,\r\n                                transition: 'transform 1s ease',\r\n                            }}\r\n                        >\r\n                            {videos.map((video, index) => (\r\n                                <div key={index} className={style.galleryitem} onClick={() => handleVideoClick(video.trailer_url)}>\r\n                                    {/* Render the poster image */}\r\n                                    {video.poster_image && (\r\n                                        <img \r\n                                            src={video.poster_image} \r\n                                            alt={video.title} \r\n                                            className={style.poster_image} \r\n                                        />\r\n                                    )}\r\n                                    <video className={style.galleryvideo} controls>\r\n                                        <source src={video.movie_file} type=\"video/mp4\" />\r\n                                        Your browser does not support the video tag.\r\n                                    </video>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {selectedVideo && (\r\n                        <div className={style.modal} onClick={closeModal}>\r\n                            <span className={style.close}>&times;</span>\r\n                            <video className={style.modalcontent} controls>\r\n                                <source src={selectedVideo} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}