{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\FileEvent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport style from './events.module.css';\nimport Nav from '../Nav';\n// import Footer from '../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const [eventsData, setEventsData] = useState([]); // State to hold the events data\n  const [loading, setLoading] = useState(true); // State for loading\n  const [error, setError] = useState(null); // State to handle errors\n\n  // Fetch data from the API\n  useEffect(() => {\n    const fetchUpcomingMovies = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/upcoming-movies/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n\n        // Log the data for debugging\n        console.log('Fetched data:', data);\n\n        // Ensure data is an array before filtering\n        if (Array.isArray(data)) {\n          // Filter out movies where release date is greater than today\n          const today = new Date();\n          const filteredEvents = data.filter(event => new Date(event.release_date) > today);\n          setEventsData(filteredEvents); // Set the filtered events to state\n        } else {\n          console.error('Data is not an array:', data);\n          setError('Invalid data format received from the server.');\n        }\n      } catch (error) {\n        console.error('Error fetching upcoming movies:', error);\n        setError(error.message); // Set the error message to state\n      } finally {\n        setLoading(false); // Set loading to false after fetch\n      }\n    };\n    fetchUpcomingMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.eventscontainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: style.eventstitle,\n        children: \"UPCOMING MOVIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) // Show loading message\n      : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this) // Display error message if there's an error\n      : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.eventsgrid,\n        children: eventsData.length > 0 ? eventsData.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.eventcard,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.poster_image,\n            alt: event.title,\n            className: style.eventimage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.eventcontent,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: style.eventtitle,\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.eventdate,\n              children: new Date(event.release_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.eventdescription,\n              children: event.synopsis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.eventrating,\n              children: [\"Rating: \", event.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: style.learnmorebtn,\n              onClick: () => window.open(event.trailer_url, '_blank'),\n              children: \"Learn More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.noEvents,\n          children: \"No upcoming movies available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this) // Message when no events are found\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Events, \"jsjs2+vI4/hKMgleFrh0XDhOJx8=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useEffect","useState","style","Nav","jsxDEV","_jsxDEV","Events","_s","eventsData","setEventsData","loading","setLoading","error","setError","fetchUpcomingMovies","response","fetch","ok","Error","data","json","console","log","Array","isArray","today","Date","filteredEvents","filter","event","release_date","message","className","container","children","eventscontainer","eventstitle","fileName","_jsxFileName","lineNumber","columnNumber","eventsgrid","length","map","eventcard","src","poster_image","alt","title","eventimage","eventcontent","eventtitle","eventdate","toLocaleDateString","eventdescription","synopsis","eventrating","rating","learnmorebtn","onClick","window","open","trailer_url","id","noEvents","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/FileEvent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport style from './events.module.css';\r\nimport Nav from '../Nav';\r\n// import Footer from '../Footer';\r\n\r\nconst Events = () => {\r\n    const [eventsData, setEventsData] = useState([]); // State to hold the events data\r\n    const [loading, setLoading] = useState(true); // State for loading\r\n    const [error, setError] = useState(null); // State to handle errors\r\n\r\n    // Fetch data from the API\r\n    useEffect(() => {\r\n        const fetchUpcomingMovies = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/upcoming-movies/');\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                \r\n                // Log the data for debugging\r\n                console.log('Fetched data:', data);\r\n\r\n                // Ensure data is an array before filtering\r\n                if (Array.isArray(data)) {\r\n                    // Filter out movies where release date is greater than today\r\n                    const today = new Date();\r\n                    const filteredEvents = data.filter(event => new Date(event.release_date) > today);\r\n                    setEventsData(filteredEvents); // Set the filtered events to state\r\n                } else {\r\n                    console.error('Data is not an array:', data);\r\n                    setError('Invalid data format received from the server.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching upcoming movies:', error);\r\n                setError(error.message); // Set the error message to state\r\n            } finally {\r\n                setLoading(false); // Set loading to false after fetch\r\n            }\r\n        };\r\n\r\n        fetchUpcomingMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {/* <Nav /> */}\r\n            <div className={style.eventscontainer}>\r\n                <h1 className={style.eventstitle}>UPCOMING MOVIES</h1>\r\n                {loading ? (\r\n                    <p>Loading...</p> // Show loading message\r\n                ) : error ? (\r\n                    <p className={style.error}>{error}</p> // Display error message if there's an error\r\n                ) : (\r\n                    <div className={style.eventsgrid}>\r\n                        {eventsData.length > 0 ? (\r\n                            eventsData.map((event) => (\r\n                                <div key={event.id} className={style.eventcard}>\r\n                                    <img src={event.poster_image} alt={event.title} className={style.eventimage} />\r\n                                    <div className={style.eventcontent}>\r\n                                        <h2 className={style.eventtitle}>{event.title}</h2>\r\n                                        <p className={style.eventdate}>{new Date(event.release_date).toLocaleDateString()}</p>\r\n                                        <p className={style.eventdescription}>{event.synopsis}</p>\r\n                                        <p className={style.eventrating}>Rating: {event.rating}</p> {/* Display rating if available */}\r\n                                        <button \r\n                                            className={style.learnmorebtn} \r\n                                            onClick={() => window.open(event.trailer_url, '_blank')}\r\n                                        >\r\n                                            Learn More\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <p className={style.noEvents}>No upcoming movies available.</p> // Message when no events are found\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Events;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}