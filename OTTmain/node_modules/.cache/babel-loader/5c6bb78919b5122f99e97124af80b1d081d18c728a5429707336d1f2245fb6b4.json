{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Register\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport axios from 'axios'; // Import axios\nimport style from \"./signup.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate\n  const [inputType, setInputType] = useState('phone'); // Default to 'phone'\n  const [inputValue, setInputValue] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState(['', '', '', '']);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [isResending, setIsResending] = useState(false); // State to handle resend OTP\n\n  const handleInputChange = e => {\n    let value = e.target.value;\n\n    // For phone number, restrict input to digits and 10 characters max\n    if (inputType === 'phone') {\n      if (/^\\d*$/.test(value) && value.length <= 10) {\n        setInputValue(value);\n      }\n    } else {\n      setInputValue(value); // No restrictions for email\n    }\n  };\n  const sendOtp = async () => {\n    if (inputValue) {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/api/resend-otp/', {\n          [inputType]: inputValue // Either phone or email\n        });\n        if (response.status === 200) {\n          setOtpSent(true);\n          console.log(`OTP sent to ${inputValue}`);\n        } else {\n          alert('Failed to send OTP. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error during OTP sending:', error);\n        alert('Error occurred while sending OTP. Please check the entered information and try again.');\n      }\n    } else {\n      alert('Please enter a valid phone number or email address');\n    }\n  };\n  const handleOtpChange = (value, index) => {\n    // Allow only digits in the OTP input fields\n    if (/^\\d*$/.test(value)) {\n      let otpArray = [...otp];\n      otpArray[index] = value;\n      setOtp(otpArray);\n    }\n  };\n  const verifyOtp = async () => {\n    if (otp.join('').length === 4) {\n      console.log('Verifying OTP...');\n\n      // Prepare data to send for OTP verification\n      const verificationData = {\n        inputType,\n        // Either 'phone' or 'email'\n        inputValue,\n        // The phone number or email address entered\n        otp: otp.join('') // The 4-digit OTP entered\n      };\n      try {\n        setIsRegistering(true);\n        // Call the OTP verification API endpoint\n        const response = await axios.post('http://127.0.0.1:8000/api/verify-otp/', verificationData);\n        if (response.status === 200) {\n          alert('OTP verified successfully!'); // Notify the user\n          console.log('OTP verified successfully:', response.data);\n\n          // Now proceed with the registration using the same data\n          const registrationResponse = await axios.post('http://127.0.0.1:8000/api/register/', {\n            inputType,\n            inputValue\n          });\n          if (registrationResponse.status === 201) {\n            alert('Registration successful!'); // Notify the user\n            console.log('Registration successful:', registrationResponse.data);\n\n            // Redirect to the home page\n            navigate('/'); // Redirect to the home page (adjust the route as necessary)\n          } else {\n            alert('Failed to register. Please try again.');\n          }\n        } else {\n          alert('Failed to verify OTP. Please try again.');\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error during OTP verification:', error);\n        alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error occurred during OTP verification. Please try again later.');\n      } finally {\n        setIsRegistering(false);\n      }\n    } else {\n      alert('Please enter the full OTP');\n    }\n  };\n  const resendOtp = async () => {\n    if (inputValue) {\n      try {\n        setIsResending(true);\n        const response = await axios.post('http://127.0.0.1:8000/api/resend-otp/', {\n          [inputType]: inputValue // Either phone or email\n        });\n        if (response.status === 200) {\n          alert('OTP resent successfully!');\n          console.log(`OTP resent to ${inputValue}`);\n        } else {\n          alert('Failed to resend OTP. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error during OTP resending:', error);\n        alert('Error occurred while resending OTP. Please check the entered information and try again.');\n      } finally {\n        setIsResending(false);\n      }\n    } else {\n      alert('Please enter a valid phone number or email address');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.signupContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.formSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), !otpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter your Phone Number or Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.inputWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: inputType === 'phone' ? 'tel' : 'email',\n              placeholder: inputType === 'phone' ? 'Phone Number' : 'Email Address',\n              value: inputValue,\n              onChange: handleInputChange,\n              kara: true,\n              ebe: true,\n              className: style.inputField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setInputType(inputType === 'phone' ? 'email' : 'phone'),\n              className: style.toggleBtn,\n              children: inputType === 'phone' ? 'Switch to Email' : 'Switch to Phone'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendOtp,\n            className: style.otpBtn,\n            children: \"Send OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Enter OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.otpInputs,\n            children: otp.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              maxLength: \"1\",\n              value: digit,\n              onChange: e => handleOtpChange(e.target.value, index),\n              className: style.otpField,\n              pattern: \"[0-9]*\",\n              inputMode: \"numeric\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyOtp,\n            className: style.loginBtn,\n            disabled: isRegistering,\n            children: isRegistering ? 'Registering...' : 'Verify & Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resendOtp,\n            className: style.resendBtn,\n            disabled: isResending,\n            children: isResending ? 'Resending...' : 'Resend OTP'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.welcomeSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"WELCOME BACK!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"JVGXHH8gkjmHowWaato99s25UEQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","axios","style","jsxDEV","_jsxDEV","SignUp","_s","navigate","inputType","setInputType","inputValue","setInputValue","otpSent","setOtpSent","otp","setOtp","isRegistering","setIsRegistering","isResending","setIsResending","handleInputChange","e","value","target","test","length","sendOtp","response","post","status","console","log","alert","error","handleOtpChange","index","otpArray","verifyOtp","join","verificationData","data","registrationResponse","_error$response","_error$response$data","message","resendOtp","className","container","children","signupContainer","formSection","fileName","_jsxFileName","lineNumber","columnNumber","inputWrapper","type","placeholder","onChange","kara","ebe","inputField","onClick","toggleBtn","otpBtn","otpInputs","map","digit","maxLength","otpField","pattern","inputMode","loginBtn","disabled","resendBtn","welcomeSection","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Register/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport axios from 'axios'; // Import axios\r\nimport style from \"./signup.module.css\";\r\n\r\nconst SignUp = () => {\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n  const [inputType, setInputType] = useState('phone'); // Default to 'phone'\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otp, setOtp] = useState(['', '', '', '']);\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [isResending, setIsResending] = useState(false); // State to handle resend OTP\r\n\r\n  const handleInputChange = (e) => {\r\n    let value = e.target.value;\r\n\r\n    // For phone number, restrict input to digits and 10 characters max\r\n    if (inputType === 'phone') {\r\n      if (/^\\d*$/.test(value) && value.length <= 10) {\r\n        setInputValue(value);\r\n      }\r\n    } else {\r\n      setInputValue(value); // No restrictions for email\r\n    }\r\n  };\r\n\r\n  const sendOtp = async () => {\r\n    if (inputValue) {\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:8000/api/resend-otp/', {\r\n          [inputType]: inputValue, // Either phone or email\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setOtpSent(true);\r\n          console.log(`OTP sent to ${inputValue}`);\r\n        } else {\r\n          alert('Failed to send OTP. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during OTP sending:', error);\r\n        alert('Error occurred while sending OTP. Please check the entered information and try again.');\r\n      }\r\n    } else {\r\n      alert('Please enter a valid phone number or email address');\r\n    }\r\n  };\r\n\r\n  const handleOtpChange = (value, index) => {\r\n    // Allow only digits in the OTP input fields\r\n    if (/^\\d*$/.test(value)) {\r\n      let otpArray = [...otp];\r\n      otpArray[index] = value;\r\n      setOtp(otpArray);\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    if (otp.join('').length === 4) {\r\n      console.log('Verifying OTP...');\r\n\r\n      // Prepare data to send for OTP verification\r\n      const verificationData = {\r\n        inputType,  // Either 'phone' or 'email'\r\n        inputValue, // The phone number or email address entered\r\n        otp: otp.join(''), // The 4-digit OTP entered\r\n      };\r\n\r\n      try {\r\n        setIsRegistering(true);\r\n        // Call the OTP verification API endpoint\r\n        const response = await axios.post('http://127.0.0.1:8000/api/verify-otp/', verificationData);\r\n        \r\n        if (response.status === 200) {\r\n          alert('OTP verified successfully!'); // Notify the user\r\n          console.log('OTP verified successfully:', response.data);\r\n\r\n          // Now proceed with the registration using the same data\r\n          const registrationResponse = await axios.post('http://127.0.0.1:8000/api/register/', {\r\n            inputType,\r\n            inputValue,\r\n          });\r\n\r\n          if (registrationResponse.status === 201) {\r\n            alert('Registration successful!'); // Notify the user\r\n            console.log('Registration successful:', registrationResponse.data);\r\n\r\n            // Redirect to the home page\r\n            navigate('/'); // Redirect to the home page (adjust the route as necessary)\r\n          } else {\r\n            alert('Failed to register. Please try again.');\r\n          }\r\n        } else {\r\n          alert('Failed to verify OTP. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during OTP verification:', error);\r\n        alert(error.response?.data?.message || 'Error occurred during OTP verification. Please try again later.');\r\n      } finally {\r\n        setIsRegistering(false);\r\n      }\r\n    } else {\r\n      alert('Please enter the full OTP');\r\n    }\r\n  };\r\n\r\n  const resendOtp = async () => {\r\n    if (inputValue) {\r\n      try {\r\n        setIsResending(true);\r\n        const response = await axios.post('http://127.0.0.1:8000/api/resend-otp/', {\r\n          [inputType]: inputValue, // Either phone or email\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          alert('OTP resent successfully!');\r\n          console.log(`OTP resent to ${inputValue}`);\r\n        } else {\r\n          alert('Failed to resend OTP. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during OTP resending:', error);\r\n        alert('Error occurred while resending OTP. Please check the entered information and try again.');\r\n      } finally {\r\n        setIsResending(false);\r\n      }\r\n    } else {\r\n      alert('Please enter a valid phone number or email address');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.signupContainer}>\r\n        <div className={style.formSection}>\r\n          <h2>Sign Up</h2>\r\n          {!otpSent ? (\r\n            <div>\r\n              <label>Enter your Phone Number or Email</label>\r\n              <div className={style.inputWrapper}>\r\n                <input\r\n                  type={inputType === 'phone' ? 'tel' : 'email'}\r\n                  placeholder={inputType === 'phone' ? 'Phone Number' : 'Email Address'}\r\n                  value={inputValue}\r\n                  onChange={handleInputChange} kara ebe\r\n                  className={style.inputField}\r\n                />\r\n                <button\r\n                  onClick={() => setInputType(inputType === 'phone' ? 'email' : 'phone')}\r\n                  className={style.toggleBtn}\r\n                >\r\n                  {inputType === 'phone' ? 'Switch to Email' : 'Switch to Phone'}\r\n                </button>\r\n              </div>\r\n              <button onClick={sendOtp} className={style.otpBtn}>\r\n                Send OTP\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h3>Enter OTP</h3>\r\n              <div className={style.otpInputs}>\r\n                {otp.map((digit, index) => (\r\n                  <input\r\n                    key={index}\r\n                    type=\"text\"\r\n                    maxLength=\"1\"\r\n                    value={digit}\r\n                    onChange={(e) => handleOtpChange(e.target.value, index)}\r\n                    className={style.otpField}\r\n                    pattern=\"[0-9]*\"\r\n                    inputMode=\"numeric\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              <button onClick={verifyOtp} className={style.loginBtn} disabled={isRegistering}>\r\n                {isRegistering ? 'Registering...' : 'Verify & Register'}\r\n              </button>\r\n              <button onClick={resendOtp} className={style.resendBtn} disabled={isResending}>\r\n                {isResending ? 'Resending...' : 'Resend OTP'}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={style.welcomeSection}>\r\n          <h2>WELCOME BACK!</h2>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}