{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport style from './showcase.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        console.log('Fetched videos:', data); // Log API response\n        setVideos(data || []); // Store the videos in state\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = videoUrl => {\n    setSelectedVideo(videoUrl); // Set the video URL to play in modal\n  };\n  const closeModal = () => {\n    setSelectedVideo(null); // Close the modal by resetting video URL\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.gallerycontainer,\n      children: [/*#__PURE__*/_jsxDEV(OwlCarousel, {\n        className: \"owl-theme\",\n        loop: true,\n        margin: 10,\n        nav: true,\n        autoplay: true,\n        autoplayTimeout: 5000,\n        responsive: {\n          0: {\n            items: 1\n          },\n          600: {\n            items: 3\n          },\n          1000: {\n            items: 5\n          }\n        },\n        children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.galleryitem,\n          onClick: () => handleVideoClick(video.movie_file) // Click to open video in modal\n          ,\n          children: video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.poster_image,\n            alt: video.title,\n            className: style.posterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.modal,\n        onClick: closeModal,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.close,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          className: style.modalcontent,\n          controls: true,\n          autoPlay: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: selectedVideo,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"pgreQswQcvHuEDpit6fh/6bGaAw=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","OwlCarousel","style","jsxDEV","_jsxDEV","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","fetchVideos","response","fetch","data","json","console","log","error","handleVideoClick","videoUrl","closeModal","className","container","children","gallerycontainer","loop","margin","nav","autoplay","autoplayTimeout","responsive","items","map","video","index","galleryitem","onClick","movie_file","poster_image","src","alt","title","posterImage","fileName","_jsxFileName","lineNumber","columnNumber","modal","close","modalcontent","controls","autoPlay","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport style from './showcase.module.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]);\r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n\r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                console.log('Fetched videos:', data); // Log API response\r\n                setVideos(data || []); // Store the videos in state\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n    \r\n        fetchVideos();\r\n    }, []);\r\n\r\n    const handleVideoClick = (videoUrl) => {\r\n        setSelectedVideo(videoUrl); // Set the video URL to play in modal\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null); // Close the modal by resetting video URL\r\n    };\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.gallerycontainer}>\r\n                {/* Owl Carousel for video gallery */}\r\n                <OwlCarousel \r\n                    className=\"owl-theme\" \r\n                    loop \r\n                    margin={10} \r\n                    nav \r\n                    autoplay \r\n                    autoplayTimeout={5000}\r\n                    responsive={{\r\n                        0: {\r\n                            items: 1\r\n                        },\r\n                        600: {\r\n                            items: 3\r\n                        },\r\n                        1000: {\r\n                            items: 5\r\n                        }\r\n                    }}\r\n                >\r\n                    {videos.map((video, index) => (\r\n                        <div \r\n                            key={index} \r\n                            className={style.galleryitem} \r\n                            onClick={() => handleVideoClick(video.movie_file)} // Click to open video in modal\r\n                        >\r\n                            {/* Render the poster image */}\r\n                            {video.poster_image && (\r\n                                <img \r\n                                    src={video.poster_image} \r\n                                    alt={video.title} \r\n                                    className={style.posterImage} \r\n                                />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </OwlCarousel>\r\n\r\n                {/* Modal to play selected video */}\r\n                {selectedVideo && (\r\n                    <div className={style.modal} onClick={closeModal}>\r\n                        <span className={style.close}>&times;</span>\r\n                        <video className={style.modalcontent} controls autoPlay>\r\n                            <source src={selectedVideo} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}