{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [isPlayerOpen, setIsPlayerOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        setVideos(data || []); // Set the fetched videos data\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n\n  // Open video player modal\n  const openPlayer = video => {\n    setSelectedVideo(video);\n    setIsPlayerOpen(true);\n  };\n\n  // Close video player modal\n  const closePlayer = () => {\n    setIsPlayerOpen(false);\n    setSelectedVideo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.showcaseContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Showcase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.videoGrid,\n      children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.videoItem,\n        onClick: () => openPlayer(video) // Open player on click\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: video.poster_image,\n          alt: video.title,\n          className: style.posterImage,\n          style: {\n            height: '330px',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), isPlayerOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.playerOverlay,\n      onClick: closePlayer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.playerContainer,\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePlayer,\n          className: style.closeButton,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          className: style.videoPlayer,\n          autoPlay: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: selectedVideo.movie_file,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"z6i3Sb0I3hoSsYIOr/awFWzKQpo=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","jsxDEV","_jsxDEV","Showcase","_s","videos","setVideos","isPlayerOpen","setIsPlayerOpen","selectedVideo","setSelectedVideo","fetchVideos","response","fetch","data","json","error","console","openPlayer","video","closePlayer","className","showcaseContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","videoGrid","map","index","videoItem","onClick","src","poster_image","alt","title","posterImage","height","width","playerOverlay","playerContainer","e","stopPropagation","closeButton","controls","videoPlayer","autoPlay","movie_file","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]);\r\n    const [isPlayerOpen, setIsPlayerOpen] = useState(false);\r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n\r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                setVideos(data || []); // Set the fetched videos data\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n\r\n        fetchVideos();\r\n    }, []);\r\n\r\n    // Open video player modal\r\n    const openPlayer = (video) => {\r\n        setSelectedVideo(video);\r\n        setIsPlayerOpen(true);\r\n    };\r\n\r\n    // Close video player modal\r\n    const closePlayer = () => {\r\n        setIsPlayerOpen(false);\r\n        setSelectedVideo(null);\r\n    };\r\n\r\n    return (\r\n        <div className={style.showcaseContainer}>\r\n            <h2>Movie Showcase</h2>\r\n            <div className={style.videoGrid}>\r\n                {videos.map((video, index) => (\r\n                    <div\r\n                        className={style.videoItem}\r\n                        key={index}\r\n                        onClick={() => openPlayer(video)} // Open player on click\r\n                    >\r\n                        <img\r\n                            src={video.poster_image}\r\n                            alt={video.title}\r\n                            className={style.posterImage}\r\n                            style={{ height: '330px', width: '100%' }}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Modal for playing the video */}\r\n            {isPlayerOpen && (\r\n                <div className={style.playerOverlay} onClick={closePlayer}>\r\n                    <div className={style.playerContainer} onClick={(e) => e.stopPropagation()}>\r\n                        <button onClick={closePlayer} className={style.closeButton}>X</button>\r\n                        {selectedVideo && (\r\n                            <video controls className={style.videoPlayer} autoPlay>\r\n                                <source src={selectedVideo.movie_file} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,SAAS,CAACQ,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAEDL,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC1BT,gBAAgB,CAACS,KAAK,CAAC;IACvBX,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACtBZ,eAAe,CAAC,KAAK,CAAC;IACtBE,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIR,OAAA;IAAKmB,SAAS,EAAErB,KAAK,CAACsB,iBAAkB;IAAAC,QAAA,gBACpCrB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBzB,OAAA;MAAKmB,SAAS,EAAErB,KAAK,CAAC4B,SAAU;MAAAL,QAAA,EAC3BlB,MAAM,CAACwB,GAAG,CAAC,CAACV,KAAK,EAAEW,KAAK,kBACrB5B,OAAA;QACImB,SAAS,EAAErB,KAAK,CAAC+B,SAAU;QAE3BC,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACC,KAAK,CAAE,CAAC;QAAA;QAAAI,QAAA,eAElCrB,OAAA;UACI+B,GAAG,EAAEd,KAAK,CAACe,YAAa;UACxBC,GAAG,EAAEhB,KAAK,CAACiB,KAAM;UACjBf,SAAS,EAAErB,KAAK,CAACqC,WAAY;UAC7BrC,KAAK,EAAE;YAAEsC,MAAM,EAAE,OAAO;YAAEC,KAAK,EAAE;UAAO;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC,GARGG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAST,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLpB,YAAY,iBACTL,OAAA;MAAKmB,SAAS,EAAErB,KAAK,CAACwC,aAAc;MAACR,OAAO,EAAEZ,WAAY;MAAAG,QAAA,eACtDrB,OAAA;QAAKmB,SAAS,EAAErB,KAAK,CAACyC,eAAgB;QAACT,OAAO,EAAGU,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;QAAApB,QAAA,gBACvErB,OAAA;UAAQ8B,OAAO,EAAEZ,WAAY;UAACC,SAAS,EAAErB,KAAK,CAAC4C,WAAY;UAAArB,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACrElB,aAAa,iBACVP,OAAA;UAAO2C,QAAQ;UAACxB,SAAS,EAAErB,KAAK,CAAC8C,WAAY;UAACC,QAAQ;UAAAxB,QAAA,gBAClDrB,OAAA;YAAQ+B,GAAG,EAAExB,aAAa,CAACuC,UAAW;YAACC,IAAI,EAAC;UAAW;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gDAE9D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvB,EAAA,CApEID,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AAsEd,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}