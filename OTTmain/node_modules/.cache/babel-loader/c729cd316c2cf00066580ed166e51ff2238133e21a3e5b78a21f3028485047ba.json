{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  // Fetch videos from the API\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        setVideos(data || []); // Set fetched videos\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = videoUrl => {\n    setSelectedVideo(videoUrl); // Open video in modal on click\n  };\n  const closeModal = () => {\n    setSelectedVideo(null); // Close the modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: style.title,\n      children: \"Movie Showcase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.gallerycontainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.gallerygrid,\n        children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.galleryitem,\n          children: video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.poster_image,\n            alt: video.title,\n            className: style.posterImage,\n            onClick: () => handleVideoClick(video.movie_file) // Open video on click\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.modal,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.modalcontent,\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.close,\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          className: style.fullScreenVideo,\n          controls: true,\n          autoPlay: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: selectedVideo,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"pgreQswQcvHuEDpit6fh/6bGaAw=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","jsxDEV","_jsxDEV","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","fetchVideos","response","fetch","data","json","error","console","handleVideoClick","videoUrl","closeModal","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","gallerycontainer","gallerygrid","map","video","index","galleryitem","poster_image","src","alt","posterImage","onClick","movie_file","modal","modalcontent","e","stopPropagation","close","fullScreenVideo","controls","autoPlay","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]); \r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n\r\n    // Fetch videos from the API\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                setVideos(data || []); // Set fetched videos\r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n        fetchVideos();\r\n    }, []);\r\n\r\n    const handleVideoClick = (videoUrl) => {\r\n        setSelectedVideo(videoUrl); // Open video in modal on click\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null); // Close the modal\r\n    };\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <h2 className={style.title}>Movie Showcase</h2>\r\n            <div className={style.gallerycontainer}>\r\n                <div className={style.gallerygrid}>\r\n                    {videos.map((video, index) => (\r\n                        <div key={index} className={style.galleryitem}>\r\n                            {/* Render the poster image */}\r\n                            {video.poster_image && (\r\n                                <img \r\n                                    src={video.poster_image} \r\n                                    alt={video.title} \r\n                                    className={style.posterImage} \r\n                                    onClick={() => handleVideoClick(video.movie_file)} // Open video on click\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal for full-screen video playback */}\r\n            {selectedVideo && (\r\n                <div className={style.modal} onClick={closeModal}>\r\n                    <div className={style.modalcontent} onClick={(e) => e.stopPropagation()}>\r\n                        <span className={style.close} onClick={closeModal}>&times;</span>\r\n                        <video className={style.fullScreenVideo} controls autoPlay>\r\n                            <source src={selectedVideo} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}