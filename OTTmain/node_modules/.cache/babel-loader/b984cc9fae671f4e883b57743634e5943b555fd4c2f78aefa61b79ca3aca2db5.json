{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Ott\\\\OTTFrontend\\\\OTTmain\\\\src\\\\Components\\\\Home\\\\Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport style from './showcase.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [loading, setLoading] = useState(false); // Loading state\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/movies/');\n        const data = await response.json();\n        setVideos(data || []);\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = async videoUrl => {\n    setLoading(true); // Set loading to true when starting to load the video\n    setSelectedVideo(videoUrl);\n    // Simulate loading delay or use the actual video loading event\n    await new Promise(resolve => setTimeout(resolve, 500)); // Replace with actual loading logic\n    setLoading(false); // Set loading to false after loading completes\n  };\n  const closeModal = () => {\n    setSelectedVideo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.gallerycontainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.gallerywrapper,\n          children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.galleryitem,\n            onClick: () => handleVideoClick(video.movie_file),\n            children: video.poster_image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.poster_image,\n              alt: video.title,\n              className: style.posterImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.modal,\n          onClick: closeModal,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.close,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), loading ?\n          /*#__PURE__*/\n          // Show loading spinner while loading the video\n          _jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n            className: style.modalcontent,\n            controls: true,\n            autoPlay: true,\n            preload: \"metadata\",\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: selectedVideo,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"JN2wz/wreHLHqCiWLUnIfSgDQGA=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","style","jsxDEV","_jsxDEV","Showcase","_s","videos","setVideos","selectedVideo","setSelectedVideo","loading","setLoading","fetchVideos","response","fetch","data","json","error","console","handleVideoClick","videoUrl","Promise","resolve","setTimeout","closeModal","children","className","container","gallerycontainer","gallerywrapper","map","video","index","galleryitem","onClick","movie_file","poster_image","src","alt","title","posterImage","fileName","_jsxFileName","lineNumber","columnNumber","modal","close","modalcontent","controls","autoPlay","preload","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Ott/OTTFrontend/OTTmain/src/Components/Home/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport style from './showcase.module.css';\r\n\r\nconst Showcase = () => {\r\n    const [videos, setVideos] = useState([]); \r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    const [loading, setLoading] = useState(false); // Loading state\r\n\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/movies/');\r\n                const data = await response.json();\r\n                setVideos(data || []); \r\n            } catch (error) {\r\n                console.error('Error fetching videos:', error);\r\n            }\r\n        };\r\n    \r\n        fetchVideos();\r\n    }, []);\r\n\r\n    const handleVideoClick = async (videoUrl) => {\r\n        setLoading(true); // Set loading to true when starting to load the video\r\n        setSelectedVideo(videoUrl);\r\n        // Simulate loading delay or use the actual video loading event\r\n        await new Promise(resolve => setTimeout(resolve, 500)); // Replace with actual loading logic\r\n        setLoading(false); // Set loading to false after loading completes\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedVideo(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.container}>\r\n                <div className={style.gallerycontainer}>\r\n                    <div className={style.gallerywrapper}>\r\n                        {videos.map((video, index) => (\r\n                            <div key={index} className={style.galleryitem} onClick={() => handleVideoClick(video.movie_file)}>\r\n                                {video.poster_image && (\r\n                                    <img \r\n                                        src={video.poster_image} \r\n                                        alt={video.title} \r\n                                        className={style.posterImage} \r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {selectedVideo && (\r\n                        <div className={style.modal} onClick={closeModal}>\r\n                            <span className={style.close}>&times;</span>\r\n                            {loading ? ( // Show loading spinner while loading the video\r\n                                <div>Loading...</div>\r\n                            ) : (\r\n                                <video className={style.modalcontent} controls autoPlay preload=\"metadata\">\r\n                                    <source src={selectedVideo} type=\"video/mp4\" />\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/CC,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,SAAS,CAACQ,IAAI,IAAI,EAAE,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAEDL,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IACzCT,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBF,gBAAgB,CAACW,QAAQ,CAAC;IAC1B;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACxDX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACrBf,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIN,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAKuB,SAAS,EAAEzB,KAAK,CAAC0B,SAAU;MAAAF,QAAA,eAC5BtB,OAAA;QAAKuB,SAAS,EAAEzB,KAAK,CAAC2B,gBAAiB;QAAAH,QAAA,gBACnCtB,OAAA;UAAKuB,SAAS,EAAEzB,KAAK,CAAC4B,cAAe;UAAAJ,QAAA,EAChCnB,MAAM,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB7B,OAAA;YAAiBuB,SAAS,EAAEzB,KAAK,CAACgC,WAAY;YAACC,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACY,KAAK,CAACI,UAAU,CAAE;YAAAV,QAAA,EAC5FM,KAAK,CAACK,YAAY,iBACfjC,OAAA;cACIkC,GAAG,EAAEN,KAAK,CAACK,YAAa;cACxBE,GAAG,EAAEP,KAAK,CAACQ,KAAM;cACjBb,SAAS,EAAEzB,KAAK,CAACuC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC;UACJ,GAPKZ,KAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQV,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,EAELpC,aAAa,iBACVL,OAAA;UAAKuB,SAAS,EAAEzB,KAAK,CAAC4C,KAAM;UAACX,OAAO,EAAEV,UAAW;UAAAC,QAAA,gBAC7CtB,OAAA;YAAMuB,SAAS,EAAEzB,KAAK,CAAC6C,KAAM;YAAArB,QAAA,EAAC;UAAO;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC3ClC,OAAO;UAAA;UAAK;UACTP,OAAA;YAAAsB,QAAA,EAAK;UAAU;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAErBzC,OAAA;YAAOuB,SAAS,EAAEzB,KAAK,CAAC8C,YAAa;YAACC,QAAQ;YAACC,QAAQ;YAACC,OAAO,EAAC,UAAU;YAAAzB,QAAA,gBACtEtB,OAAA;cAAQkC,GAAG,EAAE7B,aAAc;cAAC2C,IAAI,EAAC;YAAW;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gDAEnD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CACV;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvC,EAAA,CAlEID,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AAoEd,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}